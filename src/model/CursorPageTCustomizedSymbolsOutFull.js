/**
 * tradewatch.io
 * Financial market data for Developers
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SymbolsOutFull from './SymbolsOutFull';

/**
 * The CursorPageTCustomizedSymbolsOutFull model module.
 * @module model/CursorPageTCustomizedSymbolsOutFull
 * @version 3.1.0
 */
class CursorPageTCustomizedSymbolsOutFull {
    /**
     * Constructs a new <code>CursorPageTCustomizedSymbolsOutFull</code>.
     * @alias module:model/CursorPageTCustomizedSymbolsOutFull
     * @param items {Array.<module:model/SymbolsOutFull>} 
     */
    constructor(items) { 
        
        CursorPageTCustomizedSymbolsOutFull.initialize(this, items);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, items) { 
        obj['items'] = items;
    }

    /**
     * Constructs a <code>CursorPageTCustomizedSymbolsOutFull</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CursorPageTCustomizedSymbolsOutFull} obj Optional instance to populate.
     * @return {module:model/CursorPageTCustomizedSymbolsOutFull} The populated <code>CursorPageTCustomizedSymbolsOutFull</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CursorPageTCustomizedSymbolsOutFull();

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [SymbolsOutFull]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('current_page')) {
                obj['current_page'] = ApiClient.convertToType(data['current_page'], 'String');
            }
            if (data.hasOwnProperty('current_page_backwards')) {
                obj['current_page_backwards'] = ApiClient.convertToType(data['current_page_backwards'], 'String');
            }
            if (data.hasOwnProperty('previous_page')) {
                obj['previous_page'] = ApiClient.convertToType(data['previous_page'], 'String');
            }
            if (data.hasOwnProperty('next_page')) {
                obj['next_page'] = ApiClient.convertToType(data['next_page'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CursorPageTCustomizedSymbolsOutFull</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CursorPageTCustomizedSymbolsOutFull</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CursorPageTCustomizedSymbolsOutFull.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                SymbolsOutFull.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['current_page'] && !(typeof data['current_page'] === 'string' || data['current_page'] instanceof String)) {
            throw new Error("Expected the field `current_page` to be a primitive type in the JSON string but got " + data['current_page']);
        }
        // ensure the json data is a string
        if (data['current_page_backwards'] && !(typeof data['current_page_backwards'] === 'string' || data['current_page_backwards'] instanceof String)) {
            throw new Error("Expected the field `current_page_backwards` to be a primitive type in the JSON string but got " + data['current_page_backwards']);
        }
        // ensure the json data is a string
        if (data['previous_page'] && !(typeof data['previous_page'] === 'string' || data['previous_page'] instanceof String)) {
            throw new Error("Expected the field `previous_page` to be a primitive type in the JSON string but got " + data['previous_page']);
        }
        // ensure the json data is a string
        if (data['next_page'] && !(typeof data['next_page'] === 'string' || data['next_page'] instanceof String)) {
            throw new Error("Expected the field `next_page` to be a primitive type in the JSON string but got " + data['next_page']);
        }

        return true;
    }


}

CursorPageTCustomizedSymbolsOutFull.RequiredProperties = ["items"];

/**
 * @member {Array.<module:model/SymbolsOutFull>} items
 */
CursorPageTCustomizedSymbolsOutFull.prototype['items'] = undefined;

/**
 * @member {Number} total
 */
CursorPageTCustomizedSymbolsOutFull.prototype['total'] = undefined;

/**
 * @member {String} current_page
 */
CursorPageTCustomizedSymbolsOutFull.prototype['current_page'] = undefined;

/**
 * @member {String} current_page_backwards
 */
CursorPageTCustomizedSymbolsOutFull.prototype['current_page_backwards'] = undefined;

/**
 * @member {String} previous_page
 */
CursorPageTCustomizedSymbolsOutFull.prototype['previous_page'] = undefined;

/**
 * @member {String} next_page
 */
CursorPageTCustomizedSymbolsOutFull.prototype['next_page'] = undefined;






export default CursorPageTCustomizedSymbolsOutFull;

